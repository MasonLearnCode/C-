#include <iostream>
#include <cmath>
#include <iomanip>
#include <cstdlib>
#include <ctime>

using namespace std;

const int MAX_SIZE = 100;
int sum = 0;

bool isPrime(int num);
bool isSCP(int num);

void inputArray(int a[], int &n);
void outputArray(int a[], int n);
void randomArray(int a[], int n);
void tongSoNguyenKoAmChiaHet3Va4(int a[], int n);
void trungBinhCongSoLe(int a[], int n);
void tongSCP(int a[], int n);
void amountOfPrimes(int a[], int n);
void quest15(int a[], int n);
void isAllElePosOdd(int a[], int n);
void isAllElePrime(int a[], int n);
void isAmDuongXenKe(int a[], int n);
void sepArr(int a[], int n);

int main() {
    int a[MAX_SIZE] = {1, -2, 3, -4, 5, -6, 7};
    int n = rand() % MAX_SIZE;
    int choice;
    

    do {
        cout << " =================================================================================================" << endl;
        cout << " |" << setw(68) << "NGUOI THUC HIEN: PHAN HAO NAM - 2274801030095" << setw(28) << " |" << endl;
        cout << " |_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_|" << endl;
        cout << " | 1. Nhap mang 1 chieu" << setw(75) << "|" << endl;
        cout << " | 2. Xuat mang 1 chieu" << setw(75) << "|" << endl;
        cout << " | 3. Tao mang 1 chieu ngau nhien" << setw(65) << "|" << endl;
        cout << " | 4. Tong so nguyen khong am chia het cho 3 va 4" << setw(49) << "|" << endl;
        cout << " | 5. Trung binh cong cac so le trong mang" << setw(56) << "|" << endl;
        cout << " | 6. Tong cac so chinh phuong co trong mang" << setw(54) << "|" << endl;
        cout << " | 7. So luong so nguyen to co trong mang" << setw(57) << "|" << endl;
        cout << " | 8. Cho biet co phan tu nao la so nguyen co cac chu so toan la so le chia het cho 3 hay khong" << setw(3) << "|" << endl;
        cout << " | 9. Cho biet trong mang co bao gom tat ca cac phan tu la so duong le hay khong" << setw(18) << "|" << endl;
        cout << " | 10. Cho biet trong mang co bao gom tat ca cac phan tu la so nguyen to hay khong" << setw(16) << "|" << endl;
        cout << " | 11. Cho biet cac phan tu trong mang co la phan tu am duong xen ke hay khong" << setw(20) << "|" << endl;
        cout << " | 12. Tach mang thanh 2 mang: 1 chan, 1 le" << setw(55) << "|" << endl;
        cout << " | Nhap '0' de thoat menu chuong trinh." << setw(59) << "|" << endl;
        cout << " =================================================================================================" << endl;
        cout << " --> Ban chon: ";
        cin >> choice;
        
        switch (choice) {
            case 1:
                inputArray(a, n);
                break;
            case 2:
                outputArray(a, n);
                break;
            case 3:
                randomArray(a, n);
                break;
            case 4: 
                tongSoNguyenKoAmChiaHet3Va4(a, n);
                break;
            case 5: 
                cout << "Trung binh cong cac so le co trong mang la: ";
                trungBinhCongSoLe(a, n);
                break;
            case 6: 
                cout << "Tong cac so chinh phuong la: ";
                tongSCP(a, n);
                break;
            case 7:
                cout << "So luong so nguyen to co trong mang la: ";
                amountOfPrimes(a, n);
                break;
            case 8: 
                quest15(a, n);
                break;
            case 9: 
                isAllElePosOdd(a, n);
                break;
            case 10: 
                isAllElePrime(a, n);
                break;
            case 11: 
                isAmDuongXenKe(a, n);
                break;
            case 12: 
                cout << "Tach thanh 2 mang chan va le: " << endl;
                sepArr(a, n);
                break;
            default:
                cout << "Khong co lua chon nay, vui long nhap lai" << endl;
        }
    } while (choice != 0);

    return 0;
}

void inputArray(int a[], int &n) {
    cout << "Nhap so phan tu cua mang: ";
    cin >> n;
    cout << "Nhap cac phan tu cua mang: " << endl;
    for (int i = 0; i < n; ++i) {
        cout << "a[" << i << "] = ";
        cin >> a[i];
    }
}

void outputArray(int a[], int n) {
    cout << "Mang vua nhap la: " << endl;
    for (int i = 0; i < n; ++i) {
        cout << a[i] << " ";
    }
    cout << endl;
}

void randomArray(int a[], int n) {
    srand((int)time(0));
    for (int i = 0; i < n; ++i) {
        a[i] = -100 + rand() % 201;
    }
}

void tongSoNguyenKoAmChiaHet3Va4(int a[], int n) {
    for (int i = 0; i < n; ++i) {
        if (a[i] >= 0 && a[i] % 3 == 0 && a[i] % 4 == 0) {
            sum += a[i];
        }
    }
    cout << "Tong so nguyen khong am chia het cho 3 va 4 la: "<< sum << endl;
}

void trungBinhCongSoLe(int a[], int n) {
    int tempCount = 0;
    int tempSum = 0;
    
    for (int i = 0; i < n; ++i) {
        if (a[i]%2 == 1) {
            tempSum += a[i];
            ++tempCount;
        }
    }
    
    double result = float(tempSum)/float(tempCount);
    
    cout << result << endl;
}

void tongSCP(int a[], int n) {
    int result = 0;
    for (int i = 0; i < n; ++i) {
        if (isSCP(a[i])) {
            result += a[i];
        }
    }
    cout << result << endl;
}

void amountOfPrimes(int a[], int n) {
    int result = 0;
    for (int i = 0; i < n; ++i) {
        if (isPrime(a[i])) {
            ++result;
        }
    }
    cout << result << endl;
}

bool isPrime(int num) { 
    if (num == 1 || num <= 0) return false;
    if (num == 2 || num == 3) return true;
    if (num % 2 == 0) return false;
    for (int i = 3; i <= sqrt(num); i += 2) {
        if (num % i == 0) return false;
    }
    return true;
}

bool isSCP(int num) { 
    if (sqrt(num) == int(sqrt(num))) return true;
    return false;
}

void quest15(int a[], int n) { 
    for (int i = 0; i < n; ++i) {
        if (a[i] % 2 != 0) { 
            int tempNum = a[i];
            int tempDigit = 0;
            bool state = true;
            
            while (tempNum >= 1) { 
                tempDigit = tempNum%10;
                tempNum /= 10;
                if (tempDigit % 2 == 0) {
                    state = false;
                    break;
                }
                
                if (tempDigit % 3 != 0) { 
                    state = false;
                    break;
                } 
             
            }
            
            if (state == true) { 
                cout << "Co phan tu nguyen co cac chu so vua le vua chia het cho 3: " << endl;
                return;
            }
            
        }
    }
    
    cout << "Khong co phan tu nguyen co cac chu so vua le vua chia het cho 3" << endl;
    return;
}

void isAllElePosOdd(int a[], int n) {
    for (int i = 0; i < n; ++i) {
        if (a[i] <= 0 || a[i] % 2 == 0) {
            cout << "Tat ca phan tu trong mang KHONG la so duong le" << endl;
            return;
        }
    }
    cout << "Tat ca phan tu trong mang la so duong le. " << endl;
    return; 
}

void isAllElePrime(int a[], int n) {
    for (int i = 0; i < n; ++i) {
        if (!isPrime(a[i])) {
            cout << "Tat ca phan tu trong mang KHONG la so nguyen to." << endl;
            return;
        }
    }
        cout << "Tat ca phan tu trong mang la so nguyen to. "<< endl;
    return; 
}

void isAmDuongXenKe(int a[], int n) {
    bool currState = true; 
    bool lastState = true; 
    
    if (a[0] < 0) currState = false; 
    else lastState = false;
    
    for (int i = 0; i < n; ++i) {
        
        if (a[i] <= 0) currState = false;
        else currState = true;

        if (currState == lastState) { 
            
            cout << "Cac phan tu am duong KHONG xen ke nhau. " << endl;
            return;
        }

        lastState = currState;
    }

    cout << "Cac phan tu am duong xen ke nhau. " << endl;
    return;
}

void sepArr(int a[], int n) {
    int evenArr[n];
    int evenIncrement = 0;
    int oddArr[n];
    int oddIncrement = 0;

    // Sep
    for (int i = 0; i < n; ++i) {
        if (a[i] % 2 == 0) evenArr[evenIncrement++] = a[i];
        else oddArr[oddIncrement++] = a[i];
    }

    // Print
    cout << "Mang so chan: [" << evenArr[0];
    for (int j = 1; j < evenIncrement; ++j) {
        cout << ", " << evenArr[j];
    }
    cout << "]\n";

    cout << "Mang so le: [" << oddArr[0];
    for (int k = 1; k < oddIncrement; ++k) {
        cout << ", " << oddArr[k];
    }
    cout << "]\n";
}
